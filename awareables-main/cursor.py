import cv2
import mediapipe as mp
from PIL import Image
import numpy as np
from AngelinaReader.braille_utils.postprocess import transform_image
import louis
from postProcessing.textToSpeech import TextToSpeech
	
tts = TextToSpeech()
mpHands = mp.solutions.hands
hands = mpHands.Hands(model_complexity=0,
    min_detection_confidence=0.5,
    min_tracking_confidence=0.5)

def translate(b):
    lout = louis.backTranslateString(["unicode.dis", "en-ueb-g1.ctb"], b)
    if b == "⠼":
       return "numerical"
    if b == "⠠":
       return "capital"
    return lout

def openFingerCursor(image, coords, brl_list, camera, meta = None):
    img = cv2.imread(image)
    if meta is not None:
        img = cv2.resize(img, meta["image"].size)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        img = Image.fromarray(img)
        if meta["homography"] is not None: img = transform_image(img, meta["homography"])
        img = cv2.cvtColor(np.array(img), cv2.COLOR_RGB2BGR)
    for crop in coords:
        cv2.rectangle(img, (int(crop[1][0]), int(crop[1][1])), (int(crop[1][2]), int(crop[1][3])), (255, 0, 0), 1)
    
    def mouse_callback(event, x, y, flags, params):
        if event == cv2.EVENT_LBUTTONDOWN:
            for crop in coords:
                if crop[1][0] < x < crop[1][2] and crop[1][1] < y < crop[1][3]:
                    print(translate(brl_list[crop[0]]))
                    tts.synthesize_speech(translate(brl_list[crop[0]]))
    cv2.namedWindow("Preview")
    if not camera:
        cv2.setMouseCallback("Preview", mouse_callback)
        while True:
            cv2.imshow('Preview', img)
            keyCode = cv2.waitKey(10) & 0xFF
            if keyCode == 27 or keyCode == ord('q'):
                break
    else:
        last = -1
        video_capture = cv2.VideoCapture(0)
        while True:
            ret_val, frame = video_capture.read()
            if meta is not None:
                frame = cv2.resize(frame, meta["image"].size)
                frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                frame = Image.fromarray(frame)
                if meta["homography"] is not None: frame = transform_image(frame, meta["homography"])
                frame = cv2.cvtColor(np.array(frame), cv2.COLOR_RGB2BGR)
            img = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
            results = hands.process(img)
            for crop in coords:
                cv2.rectangle(frame, (int(crop[1][0]), int(crop[1][1])), (int(crop[1][2]), int(crop[1][3])), (255, 0, 0), 1)
            if results.multi_hand_landmarks is not None:
                loc = (results.multi_hand_landmarks[0].landmark[8].x * meta["image"].size[0] - 3, results.multi_hand_landmarks[0].landmark[8].y * meta["image"].size[1])
                cv2.circle(frame, (int(loc[0]), int(loc[1])), 3, (255, 0, 0), 2)
                for crop in coords:
                    if crop[1][0] < loc[0] < crop[1][2] and crop[1][1] < loc[1] < crop[1][3]:
                        cur = crop[0]
                        if (cur != last):
                            print(translate(brl_list[cur]))
                            tts.synthesize_speech(translate(brl_list[cur]))
                            last = cur
            cv2.imshow("Preview", frame)
            keyCode = cv2.waitKey(10) & 0xFF
            if keyCode == 27 or keyCode == ord('q'):
                break
        video_capture.release()
    cv2.destroyAllWindows()

if __name__ == '__main__':
    coords = [(0, [494.9364318847656, 195.21896362304688, 510.5388488769531, 216.5394287109375]), (1, [514.2852783203125, 196.40882873535156, 529.76025390625, 216.95445251464844]), (2, [530.5885620117188, 197.9127960205078, 546.1701049804688, 218.47666931152344]), (4, [395.5883483886719, 223.41357421875, 410.7018737792969, 245.87619018554688]), (6, [426.1876525878906, 223.26202392578125, 441.6443786621094, 244.4830322265625]), (7, [444.1719055175781, 223.9730987548828, 459.1990051269531, 245.6697235107422]), (8, [462.554931640625, 223.6659393310547, 478.24114990234375, 245.6977081298828]), (9, [480.2514953613281, 223.28749084472656, 496.1094665527344, 245.4290008544922]), (11, [516.1160278320312, 222.6765899658203, 531.7672729492188, 244.74266052246094]), (12, [534.5421142578125, 222.11741638183594, 550.624755859375, 244.17396545410156]), (13, [552.5469360351562, 222.2958984375, 568.2057495117188, 244.30755615234375]), (15, [588.830810546875, 220.69569396972656, 604.0831298828125, 242.74879455566406]), (16, [607.8594360351562, 220.27098083496094, 623.0863647460938, 242.3085479736328]), (17, [624.26220703125, 219.3851776123047, 639.6826171875, 241.5257110595703]), (18, [641.553466796875, 218.88934326171875, 657.424072265625, 241.3543701171875]), (19, [659.2747802734375, 218.2071533203125, 675.1015625, 240.57904052734375]), (29, [863.326171875, 211.1146240234375, 880.560791015625, 235.781494140625]), (30, [881.4121704101562, 212.8236083984375, 898.6648559570312, 237.234619140625]), (32, [446.66790771484375, 250.91468811035156, 462.0797119140625, 272.7182922363281]), (33, [464.6924133300781, 254.85044860839844, 480.0652770996094, 276.34051513671875]), (34, [481.2722473144531, 258.4520568847656, 496.7130432128906, 279.8295593261719]), (36, [210.72012329101562, 288.8982849121094, 227.01150512695312, 310.6513977050781]), (37, [228.5481719970703, 285.72100830078125, 244.46400451660156, 307.99249267578125]), (38, [246.3580322265625, 285.10736083984375, 262.7034606933594, 307.5201416015625]), (39, [264.4316101074219, 284.8546447753906, 280.7366027832031, 307.1756896972656]), (40, [282.8088073730469, 283.7258605957031, 299.0894470214844, 306.3385925292969]), (41, [300.38787841796875, 284.4045104980469, 316.8773193359375, 307.4894104003906]), (42, [318.71527099609375, 283.69635009765625, 334.7669677734375, 305.99798583984375]), (43, [336.89105224609375, 284.6032409667969, 352.81427001953125, 307.0890808105469]), (45, [372.13299560546875, 283.4610595703125, 388.5640869140625, 306.49847412109375]), (46, [390.59332275390625, 283.12628173828125, 406.7860107421875, 305.83148193359375]), (47, [408.79595947265625, 283.13653564453125, 424.69317626953125, 305.70220947265625]), (49, [444.8602294921875, 282.6830139160156, 460.62530517578125, 305.1072692871094]), (50, [463.2730712890625, 281.9527893066406, 478.95458984375, 303.6753234863281]), (51, [481.0411376953125, 282.9366149902344, 496.71405029296875, 304.8382873535156]), (52, [498.8174743652344, 282.1121826171875, 514.1634521484375, 304.0941162109375]), (53, [516.3412475585938, 280.9779052734375, 531.9695434570312, 303.19891357421875]), (54, [535.1162719726562, 281.3366394042969, 551.0598754882812, 303.5966491699219]), (55, [552.662841796875, 280.2804260253906, 568.66650390625, 302.8734436035156]), (56, [569.8858642578125, 280.3141784667969, 585.8135986328125, 302.5746765136719]), (58, [606.4082641601562, 279.34124755859375, 622.6798706054688, 302.4520263671875]), (59, [625.086181640625, 279.8846740722656, 640.971923828125, 301.9972229003906]), (61, [661.818115234375, 278.5782470703125, 677.6204833984375, 300.7515869140625]), (62, [679.8712768554688, 277.71319580078125, 695.9437866210938, 300.2275390625]), (63, [697.7965698242188, 277.2630310058594, 714.1119995117188, 299.9224548339844]), (64, [716.1661376953125, 276.5660400390625, 732.495361328125, 299.43719482421875]), (65, [734.5779418945312, 276.0947265625, 750.8009643554688, 299.18994140625]), (66, [752.5210571289062, 275.7825622558594, 768.5106811523438, 298.2214050292969]), (68, [790.6329956054688, 275.4017028808594, 806.6799926757812, 298.3500061035156]), (69, [808.1077270507812, 274.8849182128906, 824.5040893554688, 297.3488464355469]), (70, [826.5105590820312, 273.7652282714844, 843.5547485351562, 297.8662414550781]), (71, [845.0499877929688, 273.64361572265625, 862.3397827148438, 297.086669921875]), (73, [176.4356689453125, 315.8413391113281, 191.90530395507812, 338.0819396972656]), (74, [193.13961791992188, 315.9319763183594, 209.365478515625, 337.9154968261719]), (75, [211.58004760742188, 315.1760559082031, 227.03659057617188, 337.5099182128906]), (76, [228.75680541992188, 315.2568054199219, 244.59494018554688, 337.7041320800781]), (77, [246.8397674560547, 315.2148132324219, 262.3822937011719, 337.4859313964844]), (79, [283.61328125, 314.4173278808594, 299.2603759765625, 336.5979919433594]), (80, [300.9148864746094, 314.5928039550781, 316.8764343261719, 336.5695495605469]), (81, [318.9648132324219, 313.4933166503906, 335.2007141113281, 335.9438171386719]), (82, [336.9010009765625, 314.16058349609375, 353.01275634765625, 336.43328857421875]), (83, [355.2505187988281, 312.8558349609375, 371.5434875488281, 335.54693603515625]), (84, [372.9064636230469, 313.12640380859375, 388.9142761230469, 335.53363037109375]), (85, [390.92828369140625, 312.95196533203125, 407.06451416015625, 335.41595458984375]), (86, [408.7977294921875, 312.908447265625, 425.0467529296875, 335.3621826171875]), (87, [427.1483154296875, 312.5971984863281, 443.2645263671875, 334.7074890136719]), (88, [445.5929870605469, 312.2892761230469, 461.6526794433594, 334.7444763183594]), (90, [481.719970703125, 311.9020080566406, 497.11920166015625, 333.5889587402344]), (91, [499.4629211425781, 311.2714538574219, 515.1376953125, 333.2981262207031]), (92, [517.1006469726562, 311.1819763183594, 532.9946899414062, 333.2091979980469]), (93, [535.2029418945312, 310.80584716796875, 551.2307739257812, 333.36407470703125]), (94, [553.077392578125, 310.20263671875, 569.0865478515625, 332.60833740234375]), (95, [570.9904174804688, 309.9350280761719, 586.9190063476562, 332.5961608886719]), (96, [588.5690307617188, 309.87347412109375, 604.5508422851562, 332.43341064453125]), (97, [607.0059204101562, 309.6654052734375, 623.0802612304688, 332.2471923828125]), (99, [644.0343627929688, 308.39605712890625, 659.7297973632812, 330.55322265625]), (100, [661.93798828125, 307.9124755859375, 677.7376708984375, 330.227294921875]), (101, [680.093505859375, 307.2613525390625, 696.1651611328125, 330.0103759765625]), (102, [698.9696655273438, 306.6167907714844, 715.0734252929688, 329.3418884277344]), (103, [716.9027099609375, 307.1769104003906, 733.02880859375, 330.0805358886719]), (104, [735.1542358398438, 306.8846435546875, 751.1962280273438, 329.91497802734375]), (105, [753.1328125, 305.6089172363281, 769.3995361328125, 328.2832946777344]), (107, [789.7901611328125, 307.5006103515625, 805.770263671875, 329.59686279296875]), (109, [175.1630401611328, 345.9042663574219, 191.31956481933594, 368.2384338378906]), (110, [193.26699829101562, 345.6260681152344, 209.12686157226562, 367.9478454589844]), (111, [210.59019470214844, 344.8115539550781, 227.11085510253906, 367.3441467285156]), (112, [229.0139617919922, 344.6717834472656, 244.7229461669922, 367.0089416503906]), (113, [247.27093505859375, 344.6049499511719, 263.13427734375, 366.8674621582031]), (114, [264.85595703125, 344.4482421875, 280.86920166015625, 366.60382080078125]), (116, [301.55841064453125, 343.81640625, 317.6611328125, 365.99542236328125]), (117, [319.4208984375, 343.54510498046875, 335.5489501953125, 365.91632080078125]), (118, [336.63720703125, 343.6841735839844, 353.16156005859375, 366.3252258300781]), (119, [355.16143798828125, 342.9472961425781, 370.69140625, 365.3368835449219]), (120, [372.2452697753906, 342.4541931152344, 388.5348205566406, 365.3813171386719]), (121, [391.03076171875, 342.5626220703125, 407.1923828125, 365.0245361328125]), (122, [409.3032531738281, 342.559814453125, 425.4226379394531, 364.92205810546875]), (123, [427.92236328125, 341.905517578125, 443.65380859375, 364.55340576171875]), (125, [463.7332763671875, 340.7829284667969, 479.7596435546875, 363.5318908691406]), (126, [481.9400939941406, 340.7722473144531, 497.5856018066406, 362.9924621582031]), (127, [498.91131591796875, 341.0138854980469, 515.04736328125, 363.8217468261719]), (128, [517.4761962890625, 340.48748779296875, 533.656494140625, 363.29388427734375]), (129, [535.3884887695312, 339.7541809082031, 551.3253784179688, 362.6026306152344]), (130, [553.4287109375, 339.32513427734375, 569.2991943359375, 362.2806396484375]), (131, [571.4298706054688, 338.87322998046875, 587.4169311523438, 361.36260986328125]), (133, [607.4540405273438, 338.44146728515625, 623.2429809570312, 360.8172607421875]), (134, [625.59423828125, 337.508544921875, 641.736572265625, 360.42462158203125]), (135, [643.7678833007812, 336.3146667480469, 659.9110717773438, 359.1981506347656]), (137, [680.6293334960938, 337.03363037109375, 696.5337524414062, 359.0545654296875]), (139, [717.52978515625, 336.19415283203125, 733.5087890625, 358.9449462890625]), (140, [735.6639404296875, 335.0070495605469, 751.6103515625, 358.0581359863281]), (141, [753.6031494140625, 335.4476623535156, 769.6505126953125, 358.3739929199219]), (142, [772.1844482421875, 335.37060546875, 788.2283935546875, 358.14105224609375]), (143, [790.5809936523438, 335.17169189453125, 806.9658813476562, 357.343017578125]), (144, [809.2975463867188, 334.3338623046875, 826.2057495117188, 357.02679443359375]), (145, [828.660888671875, 334.0659484863281, 845.8341064453125, 357.7182312011719]), (147, [174.97406005859375, 375.49639892578125, 191.23831176757812, 398.1312255859375]), (148, [193.20260620117188, 375.3019104003906, 209.22100830078125, 397.7059631347656]), (149, [211.3683624267578, 374.4880676269531, 227.1940155029297, 397.1049499511719]), (150, [228.94081115722656, 374.188720703125, 244.6106719970703, 396.80853271484375]), (151, [247.04226684570312, 373.76385498046875, 262.7704162597656, 396.62213134765625]), (153, [283.8656921386719, 373.4457092285156, 299.9036560058594, 396.1183166503906]), (154, [301.7563171386719, 373.15557861328125, 317.4195861816406, 395.76007080078125]), (155, [319.6431884765625, 372.76495361328125, 335.47894287109375, 395.4388427734375]), (156, [337.5504455566406, 372.9443664550781, 353.5999450683594, 395.5367126464844]), (158, [373.41168212890625, 373.0732727050781, 389.1390380859375, 395.2892761230469]), (159, [391.4134521484375, 372.1926574707031, 407.34234619140625, 394.7815856933594]), (160, [409.7940368652344, 370.5357971191406, 425.8004455566406, 393.6981506347656]), (161, [428.28558349609375, 370.6172180175781, 444.2354736328125, 393.3437805175781]), (162, [446.42254638671875, 371.08624267578125, 462.21063232421875, 393.776611328125]), (163, [464.4764404296875, 370.7182922363281, 480.15081787109375, 393.2425231933594]), (164, [482.0423278808594, 371.2012634277344, 497.8426208496094, 393.8056335449219]), (165, [499.6977233886719, 371.2635192871094, 515.4666748046875, 393.9061584472656]), (167, [536.2120971679688, 369.96343994140625, 551.8633422851562, 392.40972900390625]), (168, [554.0285034179688, 369.1816101074219, 569.8663940429688, 391.7121276855469]), (169, [571.8819580078125, 369.02703857421875, 587.5718994140625, 391.3023681640625]), (170, [589.96337890625, 368.5567321777344, 605.7149658203125, 391.3766784667969]), (172, [626.0516967773438, 367.791015625, 641.5231323242188, 390.025146484375]), (173, [644.404541015625, 367.43402099609375, 660.5374755859375, 389.92669677734375]), (174, [662.845703125, 367.2410583496094, 679.221435546875, 390.3769226074219]), (175, [681.0646362304688, 366.818359375, 697.3892211914062, 389.79034423828125]), (176, [698.9418334960938, 366.0504455566406, 715.3062133789062, 388.6930236816406]), (177, [717.4703979492188, 365.4852600097656, 733.9453735351562, 388.0878601074219]), (178, [736.3907470703125, 365.23358154296875, 752.859375, 388.41693115234375]), (179, [754.6926879882812, 365.098388671875, 770.8965454101562, 387.88079833984375]), (181, [791.7355346679688, 365.0636901855469, 808.5610961914062, 387.5989074707031]), (182, [810.361572265625, 364.7148132324219, 827.093017578125, 386.9678039550781]), (184, [847.9256591796875, 363.55487060546875, 864.710205078125, 386.2264404296875]), (185, [866.6962890625, 363.47015380859375, 883.3963623046875, 386.2559814453125]), (187, [175.1710968017578, 405.1441955566406, 191.2294158935547, 426.5177307128906]), (188, [193.59381103515625, 405.360107421875, 209.35821533203125, 426.53912353515625]), (189, [210.97122192382812, 404.8072204589844, 227.26254272460938, 426.6965637207031]), (190, [229.21270751953125, 404.44732666015625, 245.012451171875, 426.30419921875]), (191, [247.576171875, 403.5588073730469, 263.8676452636719, 426.2228698730469]), (192, [265.7262268066406, 403.4257507324219, 281.9634094238281, 425.8346862792969]), (193, [284.3940124511719, 403.60284423828125, 300.0697326660156, 426.01171875]), (195, [319.9801330566406, 402.9622802734375, 335.8496398925781, 425.69647216796875]), (196, [338.0211181640625, 403.0250244140625, 353.8695068359375, 424.744140625]), (197, [356.1051330566406, 402.732666015625, 371.8079528808594, 425.215576171875]), (198, [373.82867431640625, 403.1438293457031, 389.32275390625, 425.1029968261719]), (200, [409.7313537597656, 400.6146240234375, 425.7739562988281, 423.71795654296875]), (201, [428.1658630371094, 400.1151428222656, 443.9173278808594, 422.8548278808594]), (202, [446.0583190917969, 400.77984619140625, 461.8896179199219, 423.68255615234375]), (203, [464.22393798828125, 400.78973388671875, 480.35125732421875, 423.60345458984375]), (204, [482.37310791015625, 400.70770263671875, 498.31512451171875, 422.71337890625]), (205, [500.27862548828125, 401.06964111328125, 516.132568359375, 422.84161376953125])]
    brl = ['⠀', '⠀', '⠀', '⠀', '⠄', '⠀', '⠁', '⠕', '⠥', '⠞', '⠀', '⠞', '⠓', '⠑', '⠀', '⠠', '⠃', '⠕', '⠕', '⠅', '⠀', '⠀', '⠀', '⠀', '⠀', '⠀', '⠀', '⠀', '⠀', '⠠', '⠧', '⠀', '⠀', '⠀', '⠀', '⠀', '⠠', '⠁', '⠛', '⠁', '⠊', '⠝', '⠎', '⠞', '⠀', '⠞', '⠓', '⠑', '⠀', '⠃', '⠁', '⠉', '⠅', '⠙', '⠗', '⠕', '⠏', '⠀', '⠕', '⠋', '⠀', '⠠', '⠺', '⠕', '⠗', '⠇', '⠙', '⠀', '⠠', '⠺', '⠁', '⠗', '⠀', '⠠', '⠠', '⠊', '⠊', '⠂', '⠀', '⠋', '⠗', '⠊', '⠑', '⠝', '⠙', '⠎', '⠓', '⠊', '⠏', '⠀', '⠙', '⠑', '⠧', '⠑', '⠇', '⠕', '⠏', '⠎', '⠀', '⠃', '⠑', '⠞', '⠺', '⠑', '⠑', '⠝', '⠀', '⠁', '⠀', '⠇', '⠕', '⠝', '⠑', '⠇', '⠽', '⠀', '⠉', '⠗', '⠊', '⠏', '⠏', '⠇', '⠑', '⠙', '⠀', '⠏', '⠁', '⠊', '⠝', '⠞', '⠑', '⠗', '⠀', '⠁', '⠝', '⠙', '⠀', '⠁', '⠀', '⠧', '⠊', '⠇', '⠇', '⠁', '⠛', '⠑', '⠀', '⠛', '⠊', '⠗', '⠇', '⠂', '⠀', '⠺', '⠓', '⠑', '⠝', '⠀', '⠞', '⠕', '⠛', '⠑', '⠞', '⠓', '⠑', '⠗', '⠀', '⠞', '⠓', '⠑', '⠽', '⠀', '⠍', '⠊', '⠝', '⠊', '⠎', '⠞', '⠑', '⠗', '⠀', '⠞', '⠕', '⠀', '⠁', '⠝', '⠀', '⠊', '⠝', '⠚', '⠥', '⠗', '⠑', '⠙', '⠀', '⠎', '⠝', '⠕', '⠺', '⠀', '⠛', '⠕', '⠕', '⠎', '⠑', '⠲', '⠀']
    openFingerCursor('capture.jpg', coords, brl, True)
